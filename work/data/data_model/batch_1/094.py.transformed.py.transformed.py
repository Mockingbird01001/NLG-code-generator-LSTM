import numpy as np
i8 = np.int64(1)
u8 = np.uint64(1)
i4 = np.int32(1)
u4 = np.uint32(1)
b_ = np.bool_(1)
b = bool(1)
i = int(1)
AR = np.array([0, 1, 2], dtype=np.int32)
AR.setflags(write=False)
reveal_type(i8 << i8)
reveal_type(i8 >> i8)
reveal_type(i8 | i8)
reveal_type(i8 ^ i8)
reveal_type(i8 & i8)
reveal_type(i8 << AR)
reveal_type(i8 >> AR)
reveal_type(i8 | AR)
reveal_type(i8 ^ AR)
reveal_type(i8 & AR)
reveal_type(i4 << i4)
reveal_type(i4 >> i4)
reveal_type(i4 | i4)
reveal_type(i4 ^ i4)
reveal_type(i4 & i4)
reveal_type(i8 << i4)
reveal_type(i8 >> i4)
reveal_type(i8 | i4)
reveal_type(i8 ^ i4)
reveal_type(i8 & i4)
reveal_type(i8 << i)
reveal_type(i8 >> i)
reveal_type(i8 | i)
reveal_type(i8 ^ i)
reveal_type(i8 & i)
reveal_type(i8 << b_)
reveal_type(i8 >> b_)
reveal_type(i8 | b_)
reveal_type(i8 ^ b_)
reveal_type(i8 & b_)
reveal_type(i8 << b)
reveal_type(i8 >> b)
reveal_type(i8 | b)
reveal_type(i8 ^ b)
reveal_type(i8 & b)
reveal_type(u8 << u8)
reveal_type(u8 >> u8)
reveal_type(u8 | u8)
reveal_type(u8 ^ u8)
reveal_type(u8 & u8)
reveal_type(u8 << AR)
reveal_type(u8 >> AR)
reveal_type(u8 | AR)
reveal_type(u8 ^ AR)
reveal_type(u8 & AR)
reveal_type(u4 << u4)
reveal_type(u4 >> u4)
reveal_type(u4 | u4)
reveal_type(u4 ^ u4)
reveal_type(u4 & u4)
reveal_type(u4 << i4)
reveal_type(u4 >> i4)
reveal_type(u4 | i4)
reveal_type(u4 ^ i4)
reveal_type(u4 & i4)
reveal_type(u4 << i)
reveal_type(u4 >> i)
reveal_type(u4 | i)
reveal_type(u4 ^ i)
reveal_type(u4 & i)
reveal_type(u8 << b_)
reveal_type(u8 >> b_)
reveal_type(u8 | b_)
reveal_type(u8 ^ b_)
reveal_type(u8 & b_)
reveal_type(u8 << b)
reveal_type(u8 >> b)
reveal_type(u8 | b)
reveal_type(u8 ^ b)
reveal_type(u8 & b)
reveal_type(b_ << b_)
reveal_type(b_ >> b_)
reveal_type(b_ | b_)
reveal_type(b_ ^ b_)
reveal_type(b_ & b_)
reveal_type(b_ << AR)
reveal_type(b_ >> AR)
reveal_type(b_ | AR)
reveal_type(b_ ^ AR)
reveal_type(b_ & AR)
reveal_type(b_ << b)
reveal_type(b_ >> b)
reveal_type(b_ | b)
reveal_type(b_ ^ b)
reveal_type(b_ & b)
reveal_type(b_ << i)
reveal_type(b_ >> i)
reveal_type(b_ | i)
reveal_type(b_ ^ i)
reveal_type(b_ & i)
reveal_type(~i8)
reveal_type(~i4)
reveal_type(~u8)
reveal_type(~u4)
reveal_type(~b_)
reveal_type(~AR)
